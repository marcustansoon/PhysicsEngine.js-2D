<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Gemini API with Image Upload</title>
</head>
<body>
  <h1>Send Image with Gemini API</h1>
  <input type="file" id="imageUpload" accept="image/*">
  <button id="sendRequestButton">Send Request</button>
  <div id="responseOutput"></div>

  <script>
    // Replace with your actual Google API Key
    const googleApiKey = 'AIzaSyBZy7B5nDp3A_EVWAW4Z03Hq20nfAi5X-g';

    document.getElementById('sendRequestButton').addEventListener('click', async function() {
      const imageInput = document.getElementById('imageUpload');
      const responseOutput = document.getElementById('responseOutput');

      // Check if an image was selected
      if (!imageInput.files[0]) {
        responseOutput.innerText = 'Please select an image file first.';
        return;
      }

      const imageFile = imageInput.files[0];
      const reader = new FileReader();

      reader.onloadend = async function () {
        const base64Image = reader.result.split(',')[1]; // Extract base64 string

        const payload = {
          contents: [{
            parts: [
              { text: 'Help estimate the nutritional value of this food, and do a breakdown of its components based on portion in the image. Give the response in JSON format (example: { "vegan_buddha_bowl": { "components": { "tofu": { "portion": { "amount": "100-150", "unit": "g" }, "calories": { "amount": "80-120", "unit": "kcal" }, "protein": { "amount": "10-15", "unit": "g" }, "total_fat": { "amount": "4-8", "unit": "g", "saturated_fat": { "amount": "0.5-1", "unit": "g" }, "trans_fat": { "amount": "0", "unit": "g" } }, "total_carb": { "amount": "3-5", "unit": "g", "fiber": { "amount": "1-2", "unit": "g" } }, "cholesterol": { "amount": "0", "unit": "mg" }, "sodium": { "amount": "10-15", "unit": "mg" }, "vitamins": { "iron": { "amount": "1-2", "unit": "mg" }, "calcium": { "amount": "150-250", "unit": "mg" } } }, "quinoa": { "portion": { "amount": "50-75", "unit": "g" }, "calories": { "amount": "100-120", "unit": "kcal" }, "protein": { "amount": "3-4", "unit": "g" }, "total_fat": { "amount": "2-3", "unit": "g", "saturated_fat": { "amount": "0.5-1", "unit": "g" }, "trans_fat": { "amount": "0", "unit": "g" } }, "total_carb": { "amount": "18-25", "unit": "g", "fiber": { "amount": "2-3", "unit": "g" } }, "cholesterol": { "amount": "0", "unit": "mg" }, "sodium": { "amount": "5-10", "unit": "mg" }, "vitamins": { "iron": { "amount": "1-2", "unit": "mg" }, "magnesium": { "amount": "50-70", "unit": "mg" } } }, "tomato": { "portion": { "amount": "50-75", "unit": "g" }, "calories": { "amount": "10-15", "unit": "kcal" }, "protein": { "amount": "0.5", "unit": "g" }, "total_fat": { "amount": "0-0.5", "unit": "g", "saturated_fat": { "amount": "0", "unit": "g" }, "trans_fat": { "amount": "0", "unit": "g" } }, "total_carb": { "amount": "2-3", "unit": "g", "fiber": { "amount": "0.5-1", "unit": "g" } }, "cholesterol": { "amount": "0", "unit": "mg" }, "sodium": { "amount": "5-10", "unit": "mg" }, "vitamins": { "vitamin_C": { "amount": "5-8", "unit": "mg" }, "vitamin_A": { "amount": "50-80", "unit": "mcg" } } } }, "verdict": "This Vegan Buddha Bowl is nutrient-dense with a good balance of protein, fiber, and healthy fats. It\'s a great option for plant-based eaters, offering a variety of vitamins and minerals, and rich in antioxidants.", "total_nutrition": { "calories": { "amount": "350-450", "unit": "kcal" }, "protein": { "amount": "20-25", "unit": "g" }, "total_fat": { "amount": "20-30", "unit": "g", "saturated_fat": { "amount": "3-5", "unit": "g" }, "trans_fat": { "amount": "0", "unit": "g" } }, "total_carb": { "amount": "50-70", "unit": "g", "fiber": { "amount": "10-15", "unit": "g" } }, "cholesterol": { "amount": "0", "unit": "mg" }, "sodium": { "amount": "200-400", "unit": "mg" }, "vitamins": { "vitamin_A": { "amount": "50-100", "unit": "mcg" }, "vitamin_C": { "amount": "10-15", "unit": "mg" }, "vitamin_K": { "amount": "20-40", "unit": "mcg" }, "iron": { "amount": "3-4", "unit": "mg" }, "magnesium": { "amount": "60-80", "unit": "mg" }, "calcium": { "amount": "200-250", "unit": "mg" } } } } }  ). If no food or non-human food is found in the image, please response with an empty json (example:{})' },
              {
                inline_data: {
                  mime_type: imageFile.type,
                  data: base64Image
                }
              }
            ]
          }]
        };

        try {
          const response = await fetch(`https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash-lite-preview-02-05:generateContent?key=${googleApiKey}`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify(payload)
          });

          const data = await response.json();
          if (response.ok) {
            responseOutput.innerText = `Response: ${data.choices[0].text}`;
          } else {
            responseOutput.innerText = `Error: ${data.error.message}`;
          }
        } catch (error) {
          console.error('Error:', error);
          responseOutput.innerText = 'An error occurred.';
        }
      };

      // Convert image to base64
      reader.readAsDataURL(imageFile);
    });
  </script>
</body>
</html>
